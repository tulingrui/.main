<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>微信授权时出现了一直不断获取授权的问题</title>
      <link href="/main/2019/05/22/%E5%BE%AE%E4%BF%A1%E6%8E%88%E6%9D%83%E6%97%B6%E5%87%BA%E7%8E%B0%E4%BA%86%E4%B8%80%E7%9B%B4%E4%B8%8D%E6%96%AD%E8%8E%B7%E5%8F%96%E6%8E%88%E6%9D%83%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/main/2019/05/22/%E5%BE%AE%E4%BF%A1%E6%8E%88%E6%9D%83%E6%97%B6%E5%87%BA%E7%8E%B0%E4%BA%86%E4%B8%80%E7%9B%B4%E4%B8%8D%E6%96%AD%E8%8E%B7%E5%8F%96%E6%8E%88%E6%9D%83%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>##微信授权时出现了一直不断获取授权的问题##</p><pre><code>发生的问题</code></pre><p>在进行获取微信授权时出现了一直不断获取授权的情况</p><pre><code>原因</code></pre><blockquote><p>前端接口访问时带上了项目名 <a href="http://xxxx/项目名/action" target="_blank" rel="noopener">http://xxxx/项目名/action</a></p></blockquote><p>因为后端做了虚拟路径 所以访问时可以不带项目名 也可以带项目名 </p><p>而后端设置的微信回调的地址是不带项目名的</p><p>这时在进行获取微信授权时就发生了一直不断的获取授权的情况</p><p>刚开始打开控制台看了一下 发现每次的sessionId都是不一样的</p><p>排查了很久 还以为是nginx配置的有问题</p><p>最后发现请求URL中带了项目名，突然想到回调的是不带项目名的 所以session每次都是不一样的</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>今天赚了1000块 耶</title>
      <link href="/main/2019/05/15/%E4%BB%8A%E5%A4%A9%E8%B5%9A%E4%BA%861000%E5%9D%97/"/>
      <url>/main/2019/05/15/%E4%BB%8A%E5%A4%A9%E8%B5%9A%E4%BA%861000%E5%9D%97/</url>
      
        <content type="html"><![CDATA[<p>##今天赚了1000块 耶##</p><p>去年2018年九十月份买了4000的BTC</p><p>才零点零零几 接着就开始跌跌跌跌，偶尔看一眼 又跌了 最后一次看 卖出去只能卖2000多，就没再想着了</p><p>今天突然看到新闻 喔嚯</p><p><img src="https://i.imgur.com/pxuy2kF.png" alt></p><p><strong>BTC突破8000美元了</strong></p><p>打开遗忘在手机角落里的交易软件 嗯 密码我都忘了 找回1下</p><p>然后进交易中看下 预估价值变5000多了 nice</p><p>赶紧出手 小赚1000块 hahah 够买挺多零食了</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>记一个初试WebSocket遇到的问题</title>
      <link href="/main/2019/05/07/%E8%AE%B0%E4%B8%80%E4%B8%AA%E5%88%9D%E8%AF%95WebSocket%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/main/2019/05/07/%E8%AE%B0%E4%B8%80%E4%B8%AA%E5%88%9D%E8%AF%95WebSocket%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>记一个初试WebSocket遇到的问题</p><p>本机运行没问题，打包时报出</p><pre><code>java.lang.IllegalStateException: javax.websocket.server.ServerContainer not available</code></pre><p>我把打包测试关掉之后没问题了</p><pre><code>&lt;build&gt;    &lt;plugins&gt;        &lt;plugin&gt;            &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;            &lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt;            &lt;configuration&gt;                &lt;source&gt;1.8&lt;/source&gt;                &lt;target&gt;1.8&lt;/target&gt;                &lt;encoding&gt;UTF-8&lt;/encoding&gt;                &lt;skip&gt;true&lt;/skip&gt;            &lt;/configuration&gt;        &lt;/plugin&gt;    &lt;/plugins&gt;&lt;/build&gt;</code></pre><p>可以打包了</p><p>而部署到服务器上运行时又报出</p><pre><code>java.lang.IllegalStateException: Failed to register @ServerEndpoint class</code></pre><p>搜了一下<br>需要改一下WebSocketConfig，将@Configuration 删掉</p><p>这时又报出了一个错误</p><pre><code>Failed to start component [StandardEngine[Catalina].StandardHost[localhost]]</code></pre><p>搜了一下说是Tomcat问题</p><p>换了个Tomcat8 OK了</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>记一事故</title>
      <link href="/main/2019/04/17/%E8%AE%B0%E4%B8%80%E4%BA%8B%E6%95%85md/"/>
      <url>/main/2019/04/17/%E8%AE%B0%E4%B8%80%E4%BA%8B%E6%95%85md/</url>
      
        <content type="html"><![CDATA[<h2 id="记一事故"><a href="#记一事故" class="headerlink" title="记一事故"></a>记一事故</h2><p>最近两个月做了一个支持服务 </p><p>同事的设备会有源源不断的请求来查询账号</p><p>而多数请求是需要我去调用另外一个厂家（硬件合作关系）的查询接口得到账号</p><p><strong>（这个厂家不给用户提供查询账号的接口，而他们的官网登录后却可以查到，没办法 我只能去扒取他们的内部接口调用）</strong></p><p>服务正式上线使用持续了一个多月 没有问题</p><p>而今天 突然报出了很多 查询失败的问题 </p><p>当然 之前就想到了查询失败的问题，所以返回了另外一种信息（一个Key）<br>Key也是可以使用的，但之前因为部分用户是电信网络会使用不了 所以改成返回账号的</p><p>接着 设备发生了大面积的停止工作，原因是 <strong>非法Key验证错误</strong></p><p>而这个Key是写死的不可能传错的</p><p>同事将设备当时报出错误的Key复制 去调试时却是正常可以使用的</p><p>而同时我的支持服务中去调用他们的查询接口时也不报错了</p><p>我和同事一沟通 都明白了 一定是厂家的服务出问题了，但使用账号的不受影响。</p><p>so 归根到底 在这个业务流程中 </p><p>我和同事与厂家之间都太信任依赖对方了</p><p>如果我的服务宕机了 那同事的设备就宕机了</p><p>如果厂家的接口出问题了，那我就没有正确数据返回了</p><p>领导知道情况后说的几句 我觉得很受益</p><blockquote><p>做通讯的 永远不要相信对方</p></blockquote><blockquote><p>一个优秀程序员的代码百分之80都在做错误分支的处理，真正处理业务的代码只有20%</p></blockquote><blockquote><p>发生错误又不确定怎么处理的时候，最好的办法就是什么都不做</p></blockquote><p>确实做了很多错误处理，也将那个Key返回了，但我没有用最优的方式保障服务</p><p>所以现在假设 设备对于和厂家交互中使用账号是必定可用</p><p>解决方案就是</p><pre><code>首先 我将所有账号信息down下来存储起来服务依旧会去厂家接口查询账号如果发现返回账号信息有更变 就修改我存储起来的信息同时返回账号如果调用厂家接口查询失败了 就查询我存储的账号信息并返回账号如果既调用厂家的失败，又没查询到已存储的，就返回空</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>RSA加密导致内存溢出</title>
      <link href="/main/2019/03/25/rsa/"/>
      <url>/main/2019/03/25/rsa/</url>
      
        <content type="html"><![CDATA[<h2 id="RSA加密导致内存溢出"><a href="#RSA加密导致内存溢出" class="headerlink" title="RSA加密导致内存溢出"></a>RSA加密导致内存溢出</h2><p>近期做的一个功能需要用到RSA加密</p><p>之前没接触过</p><p>搜了一下然后就开始做了 功能完成上线测试时就发现问题了</p><p>内存飙升且降不下来 直到内存溢出Tomcat自动关闭了</p><p>再搜了1下 好多人都遇到这个问题 原因就是 </p><pre><code>BouncyCastleProvider </code></pre><p>这个类 每次 new一个就多一个，不回收</p><p>所以内存见增不见减</p><p>所有new的地方改成调用 getInstance()</p><pre><code>private static volatile BouncyCastleProvider bouncyCastleProvider = null;public static BouncyCastleProvider getInstance() {        if(null == bouncyCastleProvider){            synchronized(RSAUtil.class){                if(null == bouncyCastleProvider){                    bouncyCastleProvider = new BouncyCastleProvider();                }            }        }        return bouncyCastleProvider; }</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>1个困扰很久的问题</title>
      <link href="/main/2019/03/15/1%E4%B8%AA%E9%83%A8%E7%BD%B2%E6%97%B6%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/main/2019/03/15/1%E4%B8%AA%E9%83%A8%E7%BD%B2%E6%97%B6%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>更新项目时很多时候只改了一部分功能<br>所以 更新时也是本地编译后更新修改的部分文件</p><p>本地研发环境运行时是毫无问题</p><p>但是更新到服务器上时偶尔就会报出</p><pre><code>java (Ljava/lang/String;Ljava/lang/String;I)V</code></pre><p>差不多就这种的 有斜杠斜杠分开的不同类型的错误</p><p>怀疑过是环境问题导致错误</p><p>但是我将所有文件一起发布时又没问题了</p><p>反复之后发现 将与更新文件有相关调用的文件一起发布才可以</p><p>但是不明白原因</p><p>找了很久 发现这篇博客 </p><blockquote><p><a href="https://blog.csdn.net/dailywater/article/details/72848770" target="_blank" rel="noopener">https://blog.csdn.net/dailywater/article/details/72848770</a></p></blockquote><p><strong>方法签名不一致</strong></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Test</title>
      <link href="/main/2019/03/14/Test/"/>
      <url>/main/2019/03/14/Test/</url>
      
        <content type="html"><![CDATA[<p>hi 这里涂凌瑞的博客 :D</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/main/2019/03/14/hello-world/"/>
      <url>/main/2019/03/14/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
